#include <stdio.h>
#include <string.h>

int longestCommonSubstring(char* str1, char* str2) {
    int n = strlen(str1);
    int m = strlen(str2);
    int maxLen = 0;

    int dp[n+1][m+1];  // Create DP table

    // Initialize first row and column with 0
    for (int i = 0; i <= n; i++)
        for (int j = 0; j <= m; j++)
            dp[i][j] = 0;

    // Fill the table
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            if (str1[i - 1] == str2[j - 1]) {
                dp[i][j] = dp[i - 1][j - 1] + 1;
                if (dp[i][j] > maxLen)
                    maxLen = dp[i][j];
            } else {
                dp[i][j] = 0;
            }
        }
    }

    return maxLen;
}

int main() {
    char str1[] = "abcde";
    char str2[] = "abfce";

    int result = longestCommonSubstring(str1, str2);
    printf("Length of longest common substring: %d\n", result);
    return 0;
}
